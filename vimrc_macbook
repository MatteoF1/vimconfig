set nocompatible              " required
filetype off                  " required

" Configuring guide based on 
" https://realpython.com/vim-and-python-a-match-made-in-heaven/#lets-make-an-ide

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" add plugin to manage Python folding
Plugin 'tmhedberg/SimpylFold'
" folding configuration
let g:SimpylFold_docstring_preview = 1

" Enable folding
set foldmethod=indent
set foldlevel=99

" development configuration for Python code
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

" development configuration for web stuff
au BufNewFile,BufRead *.js, *.html, *.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2

" Manage autoidentation in a simplified way
Plugin 'vim-scripts/indentpython.vim'

" Color red useless whitespace, in order to detect it
highlight BadWhitespace ctermfg=16 ctermbg=253 guifg=#000000 guibg=#F8F8F0
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

" Set encoding to utf-8
set encoding=utf-8

" Configure autocomplete for Python
Bundle 'Valloric/YouCompleteMe'

" installing customizations
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

" Adding support for virtualenv in Python
py3 << EOF
import sys
from os import environ, path
if 'VIRTUAL_ENV' in environ:
  project_base_dir = environ['VIRTUAL_ENV']
  activate_this = path.join(project_base_dir, 'bin/activate_this.py')
  with open(activate_this) as file:
    exec(file.read(), {'__file__':activate_this})
EOF

" Checking code syntax
Plugin 'vim-syntastic/syntastic'

" Check PEP 8 syntax
Plugin 'nvie/vim-flake8'

let python_highlight_all=1
syntax on

" Color scheme
Plugin 'jnurmine/Zenburn'
Plugin 'altercation/vim-colors-solarized'

" Basic configuration
if has('gui_running')
  set background=dark
  colors solarized
else
  colors zenburn
endif

" loading the function
so ~/.vim/bundle/vim-colors-solarized/autoload/togglebg.vim
call togglebg#map("<F5>")

" Add file tree
Plugin 'scrooloose/nerdtree'
" Opening tree automatically at startup
autocmd vimenter * NERDTree

" Open nerdtree automatically with no files
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" Ability to close vim when there is only nerdtree as opentab
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Add tabs
Plugin 'jistr/vim-nerdtree-tabs'

" Ignore files in NERDTree
let NERDTreeIgnore=['\.pyc$', '\~$']

" Search
Plugin 'kien/ctrlp.vim'

" Add line numbering
set nu

" Status bar
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

